[
  {
    "متن": "روشن کردن چراغ قوه",
    "کد": "android.hardware.camera2.CameraManager cameraManager \u003d (android.hardware.camera2.CameraManager) getSystemService(Context.CAMERA_SERVICE);\ntry {\nString cameraId \u003d cameraManager.getCameraIdList()[0]; cameraManager.setTorchMode(cameraId, true); } catch (android.hardware.camera2.CameraAccessException e) { }"
  },
  {
    "متن": "خاموش کردن چراغ قوه",
    "کد": "android.hardware.camera2.CameraManager cameraManager \u003d (android.hardware.camera2.CameraManager) getSystemService(Context.CAMERA_SERVICE);\ntry {\nString cameraId \u003d cameraManager.getCameraIdList()[0]; cameraManager.setTorchMode(cameraId, false); } catch (android.hardware.camera2.CameraAccessException e) { }"
  },
  {
    "متن": "خطای ادیت تکست",
    "کد": "edittext1.setError(\"خطای ادیت تکست\");"
  },
  {
    "متن": "رنگ نوار پایین صفحه",
    "کد": "if (Build.VERSION.SDK_INT \u003e Build.VERSION_CODES.KITKAT) {\nWindow w \u003dthis.getWindow();\nw.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);\nw.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS); w.setNavigationBarColor(Color.parseColor(\"#FFC107\".replace(\"0xFF\" , \"#\")));\n}"
  },
  {
    "متن": "کوچک نمایی عکس",
    "کد": "if (Build.VERSION.SDK_INT \u003e Build.VERSION_CODES.KITKAT) {\nWindow w \u003dthis.getWindow();\nw.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);\nw.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS); w.setNavigationBarColor(Color.parseColor(\"#FFC107\".replace(\"0xFF\" , \"#\")));\n}"
  },
  {
    "متن": "بزرگ نمایی عکس",
    "کد": "//To set Imageview Zoom out in a project.\n\n float x\u003dimageview1.getScaleX(), y\u003dimageview1.getScaleY(),yenix\u003dx-1,yeniy\u003dy-1; imageview1.setScaleX(yenix);imageview1.setScaleY(yeniy);"
  },
  {
    "متن": "آمار برنامه",
    "کد": "data:text/html, \u003c!-- Statistics by www.1abzar.com ---\u003e \u003cscript type\u003d\"text/javascript\" src\u003d\"http://1abzar.ir/abzar/tools/stat/amar-v3.php?color\u003d333333\u0026bg\u003dF7F4D9\u0026kc\u003d212121\u0026kadr\u003d4\u0026amar\u003d92t3djco64r3hsjjqmllvayv06wi0n\u0026show\u003d1|1|1|1|0|0|1\"\u003e\u003c/script\u003e\u003cdiv style\u003d\"display:none\"\u003e\u003ch3\u003e\u003ca href\u003d\"http://www.1abzar.com/abzar/stat.php\"\u003e\u0026#1570;\u0026#1605;\u0026#1575;\u0026#1585;\u0026#1711;\u0026#1740;\u0026#1585; \u0026#1608;\u0026#1576;\u0026#1604;\u0026#1575;\u0026#1711;\u003c/a\u003e\u003c/h3\u003e\u003c/div\u003e \u003c!-- Statistics by www.1abzar.com ---\u003e"
  },
  {
    "متن": "نمایش درصد شارژ",
    "کد": "BatteryManager bm \u003d (BatteryManager)getSystemService(BATTERY_SERVICE);\nint batLevel \u003d bm.getIntProperty(BatteryManager.BATTERY_PROPERTY_CAPACITY);\ntextview1.setText(Integer.toString(batLevel));"
  },
  {
    "متن": "گرد کردن تکست ویو",
    "کد": "android.graphics.drawable.GradientDrawable AA \u003d new android.graphics.drawable.GradientDrawable();\nAA.setColor(Color.parseColor(\"#FFC107\"));\nAA.setCornerRadii(new float[] { 50, 50, 50, 50, 50, 50, 50, 50 });\ntextview1.setBackground(AA);"
  },
  {
    "متن": "گرد کردن باتون",
    "کد": "android.graphics.drawable.GradientDrawable AD \u003d new android.graphics.drawable.GradientDrawable();\nAD.setColor(Color.parseColor(\"#FFD54F\"));\nAD.setCornerRadii(new float[] { 50, 50, 50, 50, 50, 50, 50, 50 });\nAD.setStroke(10, Color.parseColor(\"#FF3300\"));\nandroid.graphics.drawable.RippleDrawable AD_RE \u003d new android.graphics.drawable.RippleDrawable(new android.content.res.ColorStateList(new int[][]{new int[]{}}, new int[]{ Color.parseColor(\"#FF3300\")}), AD, null);\nbutton1.setBackground(AD_RE);\nif(Build.VERSION.SDK_INT \u003e\u003d 50) { button1.setElevation(7f); }"
  },
  {
    "متن": "سایه",
    "کد": "android.graphics.drawable.GradientDrawable gd \u003d new android.graphics.drawable.GradientDrawable();\ngd.setColor(Color.parseColor(\"#FFFFFF\"));\ntextview1.setBackground(gd);\n\nif (Build.VERSION.SDK_INT \u003e\u003d 21){\ntextview1.setElevation((int)30);}"
  },
  {
    "متن": "دیالوگ ساده",
    "کد": "android.graphics.drawable.GradientDrawable gd \u003d new android.graphics.drawable.GradientDrawable();\ngd.setColor(Color.parseColor(\"#FFFFFF\"));\ntextview1.setBackground(gd);\n\nif (Build.VERSION.SDK_INT \u003e\u003d 21){\ntextview1.setElevation((int)30);}"
  },
  {
    "متن": "پیغام",
    "کد": "\nSketchwareUtil.showMessage(getApplicationContext(), \"متن مورد نظر\");"
  },
  {
    "متن": "ایجاد تکست ویو",
    "کد": "//This code is use to create textview in a project.\n\nfinal TextView mytext \u003d new TextView(ProjectinActivity.this); mytext.setText(\"Your Text\"); mytext.setTextColor(0xFF000000); mytext.setLayoutParams(new LinearLayout.LayoutParams(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT, android.widget.LinearLayout.LayoutParams.WRAP_CONTENT)); linear1.addView(mytext);"
  },
  {
    "متن": "ایجاد باتون",
    "کد": "//This code is use to create button in a project.\n\nfinal Button mybutton \u003d new Button(ProjectinActivity.this); mybutton.setText(\"Your Button\"); mybutton.setLayoutParams(new LinearLayout.LayoutParams(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT, android.widget.LinearLayout.LayoutParams.WRAP_CONTENT)); linear1.addView(mybutton);،"
  },
  {
    "متن": "ارسال اعلان ",
    "کد": "/*\nDeveloper :- Aauraparti YouTube channel\nPowered by :- Gopal\n*/\n\nfinal Context context \u003d getApplicationContext();\n\n\nNotificationManager notificationManager \u003d (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);\n\nIntent intent \u003d new Intent(this, MainActivity.class); \nintent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP); \nPendingIntent pendingIntent \u003d PendingIntent.getActivity(this, 0, intent, 0); \nandroidx.core.app.NotificationCompat.Builder builder; \n\n    int notificationId \u003d 1;\n    String channelId \u003d \"channel-01\";\n    String channelName \u003d \"Channel Name\";\n    int importance \u003d NotificationManager.IMPORTANCE_HIGH;\n\n    if (android.os.Build.VERSION.SDK_INT \u003e\u003d android.os.Build.VERSION_CODES.O) {\n        NotificationChannel mChannel \u003d new NotificationChannel(\n                channelId, channelName, importance);\n        notificationManager.createNotificationChannel(mChannel);\n    }\n\n  \n androidx.core.app.NotificationCompat.Builder mBuilder \u003d new androidx.core.app.NotificationCompat.Builder(context, channelId)\n            .setSmallIcon(R.drawable.icon)\n            .setContentTitle(_av1)\n            .setContentText(_av2)\n            .setAutoCancel(true)\n            .setOngoing(false)\n            .setContentIntent(pendingIntent);\n    TaskStackBuilder stackBuilder \u003d TaskStackBuilder.create(context);\n    stackBuilder.addNextIntent(intent);\n    PendingIntent resultPendingIntent \u003d stackBuilder.getPendingIntent(\n            0,\n            PendingIntent.FLAG_UPDATE_CURRENT\n    );\n    mBuilder.setContentIntent(resultPendingIntent);\n\n    notificationManager.notify(notificationId, mBuilder.build());"
  },
  {
    "متن": "نقاشی",
    "کد": "dv \u003d new DrawingView(this);\nlinear1.addView(dv);\nmPaint \u003d new Paint();\nmPaint.setAntiAlias(true);\nmPaint.setDither(true);\nmPaint.setColor(Color.BLACK); \nmPaint.setStyle(Paint.Style.STROKE); \nmPaint.setStrokeJoin(Paint.Join.ROUND); \nmPaint.setStrokeCap(Paint.Cap.ROUND); \nmPaint.setStrokeWidth(12);\n}\nDrawingView dv; private Paint mPaint;\nprivate Canvas mCanvas;\n\npublic class DrawingView extends View {\npublic int width;\npublic int height;\nprivate Bitmap mBitmap;\nprivate Path mPath;\nprivate Paint mBitmapPaint;\nContext context; private Paint circlePaint; private Path circlePath;\n\npublic DrawingView(Context c) {\nsuper(c);\ncontext\u003dc;\nmPath \u003d new Path();\nmBitmapPaint \u003d new Paint(Paint.DITHER_FLAG); \ncirclePaint \u003d new Paint();\ncirclePath \u003d new Path();\ncirclePaint.setAntiAlias(true);\ncirclePaint.setColor(Color.BLUE); \ncirclePaint.setStyle(Paint.Style.STROKE); \ncirclePaint.setStrokeJoin(Paint.Join.MITER); \ncirclePaint.setStrokeWidth(4f);\n}\n\n@Override protected void onSizeChanged(int w, int h, int oldw, int oldh) { super.onSizeChanged(w, h, oldw, oldh); mBitmap \u003d Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_8888); mCanvas \u003d new Canvas(mBitmap); }\n\n@Override protected void onDraw(Canvas canvas) { super.onDraw(canvas); canvas.drawBitmap( mBitmap, 0, 0, mBitmapPaint);\ncanvas.drawPath( mPath, mPaint); canvas.drawPath( circlePath, circlePaint);\ninvalidate(); }\n\nprivate float mX, mY;\nprivate static final float TOUCH_TOLERANCE \u003d 4;\nprivate void touch_start(float x, float y) { mPath.reset(); mPath.moveTo(x, y); mX \u003d x; mY \u003d y; }\n\nprivate void touch_move(float x, float y) { float dx \u003d Math.abs(x - mX); float dy \u003d Math.abs(y - mY); if (dx \u003e\u003d TOUCH_TOLERANCE || dy \u003e\u003d TOUCH_TOLERANCE) { mPath.quadTo(mX, mY, (x + mX)/2, (y + mY)/2); mX \u003d x; mY \u003d y; circlePath.reset(); circlePath.addCircle(mX, mY, 30, Path.Direction.CW); } }\nprivate void touch_up() { mPath.lineTo(mX, mY); circlePath.reset();\nmCanvas.drawPath(mPath, mPaint);\nmPath.reset(); }\n\n@Override public boolean onTouchEvent(MotionEvent event) {\nfloat x \u003d event.getX(); float y \u003d event.getY();\nswitch (event.getAction()) {\ncase MotionEvent.ACTION_DOWN: touch_start(x, y); invalidate(); break;\ncase MotionEvent.ACTION_MOVE: touch_move(x, y); invalidate(); break;\ncase MotionEvent.ACTION_UP: touch_up(); invalidate(); break; } return true; }"
  },
  {
    "متن": "رنگ قلم نقاشی",
    "کد": "mPaint.setColor(Color.parseColor(\"#F44336\"));"
  },
  {
    "متن": "سایز قلم نقاشی",
    "کد": "mPaint.setStrokeWidth((int)سایز);"
  },
  {
    "متن": "دیالوگ مشکی",
    "کد": "setTheme(android.R.style.Theme_Material);"
  },
  {
    "متن": "لیست ویو انیمیشنی",
    "کد": "Animation animation;animation \u003d AnimationUtils.loadAnimation(\ngetApplicationContext(),android.R.anim.slide_in_left);animation.setDuration(200);linear1.startAnimation(animation); animation \u003d null;"
  },
  {
    "متن": "ضد شات",
    "کد": "getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);"
  },
  {
    "متن": "اشتراک گذاری عکس",
    "کد": "Bitmap bm \u003d ((android.graphics.drawable.BitmapDrawable) imageview1.getDrawable()).getBitmap(); try { java.io.File file \u003d new java.io.File(getExternalCacheDir() + \"/image.jpg\"); java.io.OutputStream out \u003d new java.io.FileOutputStream(file); bm.compress(Bitmap.CompressFormat.JPEG, 100, out); out.flush(); out.close(); } catch (Exception e) { showMessage(e.toString()); } Intent iten \u003d new Intent(android.content.Intent.ACTION_SEND); iten.setType(\"*/*\"); iten.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(new java.io.File(getExternalCacheDir() + \"/image.jpg\"))); startActivity(Intent.createChooser(iten, \"Send image\"));"
  },
  {
    "متن": "گرد کردن تصویر",
    "کد": "//This code is use to make image circle(Rounded).\n\n//put below code in onCreate event\nBitmap bm \u003d ((android.graphics.drawable.BitmapDrawable) imageview1.getDrawable()).getBitmap(); imageview1.setImageBitmap(getRoundedCornerBitmap(bm, 360)); \n\n\n//put below code in a more block \n\n} public static Bitmap getRoundedCornerBitmap(Bitmap bitmap, int pixels) { Bitmap output \u003d Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Bitmap.Config.ARGB_8888); Canvas canvas \u003d new Canvas(output); final int color \u003d 0xff424242; final Paint paint \u003d new Paint(); final Rect rect \u003d new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight()); final RectF rectF \u003d new RectF(rect); final float roundPx \u003d pixels; paint.setAntiAlias(true); canvas.drawARGB(0, 0, 0, 0); paint.setColor(color); canvas.drawRoundRect(rectF, roundPx, roundPx, paint); paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN)); canvas.drawBitmap(bitmap, rect, rect, paint); return output;"
  },
  {
    "متن": "رنگ فب",
    "کد": "_fab.setBackgroundTintList(android.content.res.ColorStateList.valueOf(Color.parseColor(\"رنگ مورد نظر خود\".replace(\"0xFF\" , \"#\"))));"
  },
  {
    "متن": "تست روت",
    "کد": "try {\n\nRuntime.getRuntime().exec(\"su\"); \n\nresultado.setText(\"Root user\");\n\n} catch (Exception e ) {\n\nresultado.setText(\"Normal user\");\nshowMessage(e.toString());\n\n}"
  },
  {
    "متن": "دمای باطری",
    "کد": "IntentFilter ifilter \u003d new IntentFilter(Intent.ACTION_BATTERY_CHANGED);\nIntent batteryStatus \u003d registerReceiver(null, ifilter);\nint temp \u003d batteryStatus.getIntExtra(BatteryManager.EXTRA_TEMPERATURE,0);\nfloat tempTwo \u003d ((float) temp) / 10;\ntextview1.setText(tempTwo + \" °C\");"
  },
  {
    "متن": "دیالوگ دسترسی فیلتر شکن",
    "کد": "Intent vi \u003d VpnService.prepare(MainActivity.this);\n\nif (vi !\u003d null) {\n\nstartActivityForResult(vi, 3); \n}"
  },
  {
    "متن": "مخفی کردن نوار بالای صفحه",
    "کد": "getSupportActionBar().hide();"
  },
  {
    "متن": "حذف کردن برنامه ها",
    "کد": "Intent startupIntent \u003d new Intent(Intent.ACTION_MAIN); \t\tstartupIntent.addCategory(Intent.CATEGORY_LAUNCHER);  \t\tfinal android.content.pm.PackageManager pm \u003d getPackageManager(); \t\tList\u003candroid.content.pm.ResolveInfo\u003e activities \u003d pm.queryIntentActivities(startupIntent,0);   \t\tCollections.sort(activities, new Comparator\u003candroid.content.pm.ResolveInfo\u003e() {  \t\t\t\tpublic int compare(android.content.pm.ResolveInfo a, android.content.pm.ResolveInfo b) {  \t\t\t\t\tandroid.content.pm.PackageManager pm \u003d getPackageManager();  \t\t\t\t\treturn String.CASE_INSENSITIVE_ORDER.compare(  \t\t\t\t\t\ta.loadLabel(pm).toString(),  \t\t\t\t\t\tb.loadLabel(pm).toString());  \t\t\t\t}  \t\t\t});   \t\tArrayAdapter\u003candroid.content.pm.ResolveInfo\u003e adapter \u003d new ArrayAdapter\u003candroid.content.pm.ResolveInfo\u003e(  \t\t\tthis, android.R.layout.simple_list_item_1, activities) {  \t\t\tpublic View getView(int pos, View convertView, ViewGroup parent) { TextView tv \u003d new TextView(MainActivity.this);  \t\t\t\tandroid.content.pm.ResolveInfo ri \u003d getItem(pos);  \t\t\ttv.setText(ri.loadLabel(pm));  \tLinearLayout lin \u003d new LinearLayout(MainActivity.this);ImageView iv \u003d new ImageView(MainActivity.this);iv.setImageDrawable(ri.loadIcon(pm));lin.addView(iv);lin.addView(tv);tv.setGravity(Gravity.CENTER_VERTICAL);tv.setPadding(16,0,0,0);tv.setTextSize(16);tv.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT ));LinearLayout.LayoutParams p \u003d\tnew LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT,LinearLayout.LayoutParams.MATCH_PARENT);p.width \u003d 70;p.height \u003d 70;p.bottomMargin \u003d 4;p.topMargin \u003d 4;iv.setLayoutParams(p);lin.setPadding(6,6,6,6);return lin;  \t\t\t}  \t\t};  \t\tlistview1.setAdapter(adapter); \t\t \t\tlistview1.setOnItemClickListener(new AdapterView.OnItemClickListener() {  \t\t\t\t@Override \t\t\t\tpublic void onItemClick(AdapterView adapter, View v, int position, long id) \t\t\t\t{ \t\t\t\t\tandroid.content.pm.ResolveInfo resolveInfo \u003d (android.content.pm.ResolveInfo)adapter.getItemAtPosition(position);  \t\t\t\t\tandroid.content.pm.ActivityInfo activityInfo \u003d resolveInfo.activityInfo;  \t\t\t\t\tif (activityInfo \u003d\u003d null) return;  \t\t\t\t\tUri packageURI \u003d Uri.parse(\"package:\".concat(activityInfo.applicationInfo.packageName)); Intent uninstallIntent \u003d new Intent(Intent.ACTION_DELETE, packageURI); startActivity(uninstallIntent); \t\t\t\t}  \t\t\t \t\t});;"
  },
  {
    "متن": "ارسال اعلان برای اندروید ۴",
    "کد": "Notification.Builder mBuilder \u003d new Notification.Builder(MainActivity.this);\nmBuilder.setSmallIcon(R.drawable.app_icon);\nmBuilder.setContentTitle(\"اعلان\");\nmBuilder.setContentText(\"توضیحات\");\nmBuilder.setDefaults(\nNotification.DEFAULT_SOUND\n| Notification.DEFAULT_VIBRATE);\nNotificationManager notificationManager \u003d (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\nnotificationManager.notify((int)1, mBuilder.build());"
  },
  {
    "متن": "وسط چین کردن نام برنامه",
    "کد": "ActionBar actionBar \u003d getActionBar();\nactionBar.setDisplayShowCustomEnabled(true);\nactionBar.setDisplayOptions(ActionBar.DISPLAY_SHOW_CUSTOM); \nactionBar.setCustomView(getLayoutInflater().inflate(R.layout.action_bar_main, null),\n        new ActionBar.LayoutParams(\n                ActionBar.LayoutParams.WRAP_CONTENT,\n                ActionBar.LayoutParams.MATCH_PARENT,\n                Gravity.CENTER\n        )\n);"
  },
  {
    "متن": "دیالوگ لودینگ",
    "کد": "ProgressDialog pd \u003d new android.app.ProgressDialog(MainActivity.this);\n\n\t\tpd.setMessage(\"در حال بارگیری\");\n\n\t\tandroid.graphics.drawable.GradientDrawable gd \u003d new android.graphics.drawable.GradientDrawable();\n\n\t\tgd.setColor(android.graphics.Color.parseColor(\"#ffeb3b\"));\n\t\tgd.setCornerRadius(25);\n\t\tgd.setStroke(4,android.graphics.Color.parseColor(\"#000000\"));\n\t\tpd.setButton(\"لغو\", new DialogInterface.OnClickListener(){\n\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(DialogInterface p1, int p2)\n\t\t\t\t{\n\t\t\t\t\t// TODO: Implement this method\n\t\t\t\t}\n\t\t\t});\n\n\t\tpd.setCancelable(false);\n\n\t\tpd.getWindow().setBackgroundDrawable(new android.graphics.drawable.InsetDrawable(gd,25));\n\t\tpd.show();"
  },
  {
    "متن": "گذاشتن گیف در برنامه",
    "کد": "\"file:///android_asset/نام گیف\""
  },
  {
    "متن": "پیغام جذاب",
    "کد": "LayoutInflater inflater \u003d getLayoutInflater(); View toastLayout \u003d inflater.inflate(R.layout.tostt, null);\n\nTextView textview1 \u003d (TextView) toastLayout.findViewById(R.id.textview1);\ntextview1.setText(\"متن\");\nLinearLayout linear1 \u003d (LinearLayout) toastLayout.findViewById(R.id.linear1);\n\nToast toast \u003d new Toast(getApplicationContext()); toast.setDuration(Toast.LENGTH_LONG);\ntoast.setView(toastLayout);\ntoast.show();\n\n android.graphics.drawable.GradientDrawable HEIFBEG \u003d new android.graphics.drawable.GradientDrawable();\nHEIFBEG.setColor(Color.parseColor(\"#FFC107\"));\nHEIFBEG.setCornerRadius((int)30);\nHEIFBEG.setStroke(5, Color.parseColor(\"#212121\"));\nlinear1.setBackground(HEIFBEG);\n\n//made by FABIÁN MODS LTDA."
  },
  {
    "متن": "بارگذاری ادرس",
    "کد": "startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"https://site.ru\")));"
  },
  {
    "متن": "پنهان کردن فب",
    "کد": "//To set fab hide in a project.\n\n_fab.setVisibility(View.GONE);"
  },
  {
    "متن": "نمایش فب",
    "کد": "// To set Show fab in project.\n\n_fab.setVisibility(View.VISIBLE);"
  },
  {
    "متن": "تغییر رنگ سیکبار",
    "کد": "seekbar1.getProgressDrawable().setColorFilter(Color.parseColor(\"#FF00FF\"), PorterDuff.Mode.SRC_IN); seekbar1.getThumb().setColorFilter(Color.parseColor(\"#FF00FF\"), PorterDuff.Mode.SRC_IN); \n\n//seekbar1 is your seekbar ID \n//#FF00FF is your RRGGBB color"
  },
  {
    "متن": "تنظیم ایکون چک باکس",
    "کد": "//To set a checkbox icon in a project.\nor to create custom checkbox.\n\ncheckbox1.setButtonDrawable(R.drawable.iconname);\n\n//iconname is an image"
  },
  {
    "متن": "تغییر سایز متن",
    "کد": "//This code is use when you want to set text size in a project.\n\ntextview1.setTextSize((float)14);"
  },
  {
    "متن": "ساعت دیچیتال",
    "کد": "//This code is use to make digitatal time or Clock in project.\n\n//Code by Md Tausif Iqbal//\nfinal DigitalClock dc \u003d new DigitalClock(this);\nlinear1.addView (dc);"
  },
  {
    "متن": "اشتراک گذاری برنامه",
    "کد": "//This code is use when you want to an app can be share on it own without using any share app to share.\n\nString apk \u003d \"\";\nString uri \u003d (getPackageName);\ntry {\nandroid.content.pm.PackageInfo pi \u003d getPackageManager().getPackageInfo(uri, android.content.pm.PackageManager.GET_ACTIVITIES);\napk \u003d pi.applicationInfo.publicSourceDir;\n} catch (Exception e) {\nshowMessage(e.toString());\n}\nIntent iten \u003d new Intent(Intent.ACTION_SEND);\niten.setType(\"*/*\");\niten.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(new java.io.File(apk)));\nstartActivity(Intent.createChooser(iten, \"Send APK\"));"
  },
  {
    "متن": "ذخیره رمز وب ویو",
    "کد": "//To set webview to save websites passwords when you sign up or in.\n webview.getSettings().setSavePassword(true);"
  },
  {
    "متن": "ادیت تکست داخل دیالوگ",
    "کد": "//This code is use to create dialog with edittext in a project.\n\n LinearLayout mylayout \u003d new LinearLayout(this); LinearLayout.LayoutParams params \u003d new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT); mylayout.setLayoutParams(params); mylayout.setOrientation(LinearLayout.VERTICAL); final EditText myedittext \u003d new EditText(this);  myedittext.setLayoutParams(new LinearLayout.LayoutParams(android.widget.LinearLayout.LayoutParams.MATCH_PARENT, android.widget.LinearLayout.LayoutParams.WRAP_CONTENT)); mylayout.addView(myedittext); dialog.setView(mylayout);"
  },
  {
    "متن": "چک کردن اینترنت",
    "کد": "//To check internet connection in a project.\n\n//put in moreblock\n\n//put this code first\n\ntry {\n\n//this is the second code\n\nconnected \u003d (Runtime.getRuntime().exec (command).waitFor() \u003d\u003d 0); } catch (Exception e){ showMessage(e.toString());}\n\n//create 2 variables, one with the name \"connected\" and the other variable with name \"command\"\n\n//put this code in variable set \"command\" to \n\nping -c 1 google.com\n\n//put one if then else block, and in the if place the \"connected\" variable and place your blocks or codes in \"then\" and \"else\" of the if block"
  },
  {
    "متن": "نمایش کیبورد",
    "کد": "edittext1.setShowSoftInputOnFocus(true);"
  },
  {
    "متن": "پنهان کردن کیبورد",
    "کد": "edittext1.setShowSoftInputOnFocus(false);"
  },
  {
    "متن": "بار گزاری عکس از نت",
    "کد": "//This code is use for imageview from url in a webview project\n\nurl \u003d\"https://google.com\";\nGlide.with(getApplicationContext()).load(Uri.parse(url)).into(imageview1);"
  },
  {
    "متن": "تبدیل صدا به متن",
    "کد": "//This code is use to create speech text in a project.\n\n//Create more block and name it extra . insert this codes below\n}\npublic static final int REQ_CODE_SPEECH_INPUT \u003d 1;\n{\n\n//Add a file picker and insert this code below.\n\n}\nbreak;\ncase REQ_CODE_SPEECH_INPUT:\nif (_resultCode \u003d\u003d RESULT_OK \u0026\u0026 null !\u003d _data) {\nArrayList\u003cString\u003e result \u003d _data.getStringArrayListExtra(android.speech.RecognizerIntent.EXTRA_RESULTS);\nedittext1.setText(result.get(0));\n\n//Add edittext 1 and button in the background of sketchware.\n\n//In the button one add this codes below.\n\nIntent intent \u003d new Intent(android.speech.RecognizerIntent.ACTION_RECOGNIZE_SPEECH); intent.putExtra(android.speech.RecognizerIntent.EXTRA_LANGUAGE_MODEL, android.speech.RecognizerIntent.LANGUAGE_MODEL_FREE_FORM); intent.putExtra(android.speech.RecognizerIntent.EXTRA_LANGUAGE, Locale.getDefault()); intent.putExtra(android.speech.RecognizerIntent.EXTRA_PROMPT, \"Speak Now\");\ntry { startActivityForResult(intent, REQ_CODE_SPEECH_INPUT); }\ncatch (ActivityNotFoundException a) {\nToast.makeText(getApplicationContext(), \"There was an error\", Toast.LENGTH_SHORT).show(); }\n\n//Finished"
  },
  {
    "متن": "تبدیل متن به صدا",
    "کد": "//This codes allows you to create text to speech in your project.\n\n\nfinal android.speech.tts.TextToSpeech t1 \u003d new android.speech.tts.TextToSpeech(getApplicationContext(), new android.speech.tts.TextToSpeech.OnInitListener() {\n@Override\npublic void onInit(int status) {  \t\t\nif(status \u003d\u003d android.speech.tts.TextToSpeech.ERROR) {\tToast.makeText(getApplicationContext(), \"Error\",Toast.LENGTH_SHORT).show();\n}\n}\n});\nbutton1.setOnClickListener(new View.OnClickListener() {\n@Override\npublic void onClick(View _v) {\nString sentence \u003d edittext1.getText().toString();  \t\tToast.makeText(getApplicationContext(), sentence,Toast.LENGTH_SHORT).show(); \t\tt1.speak(sentence,android.speech.tts.TextToSpeech.QUEUE_FLUSH, null);  \t}  } );"
  },
  {
    "متن": "باز کردن برنامه",
    "کد": "//This code is use to launch an app in your project.\n\n Intent launchIntent \u003d getPackageManager().getLaunchIntentForPackage(\"com.package.address\");  { startActivity(launchIntent);}"
  },
  {
    "متن": "بستن برنامه",
    "کد": "//This code is use when you want to close all activity at once.\n\nfinishAffinity();"
  },
  {
    "متن": "دانلود فیلم از یوتیوب",
    "کد": "//This codes is use when you want to create a youtube downloader project.\nNote:Insert 2 button and rename one to \"btn\" and rename one to \"button_container\" and set webview to \"web\". You will do all this changes on ID name.\n\nfinal List\u003cVideo\u003e videos \u003d new ArrayList\u003cVideo\u003e();\nbutton_container.setVisibility(View.GONE);\nweb.setWebViewClient(new WebViewClient(){\n@Override\npublic android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView view, android.webkit.WebResourceRequest request) {\nif(request.getUrl().toString().matches(\".*googlevideo.com/videoplayback.*\")){\nVideo vid\u003dnew Video(request.getUrl().toString());\nboolean isExists \u003d false;\nfor(Video v:videos){\nif(v.size\u003d\u003dvid.size) isExists\u003dtrue;\n}\nif(!isExists) videos.add(vid);\nnew Handler(Looper.getMainLooper()).post(new Runnable(){\n@Override\npublic void run(){\nbutton_container.setVisibility(View.VISIBLE);\n}\n});\nreturn new WebResourceResponse(\"\", \"\", null);\n}\nreturn super.shouldInterceptRequest(view, request);\n}\n@Override\npublic void onPageFinished(android.webkit.WebView view, java.lang.String url) {\nvideos.clear();\nif(url.contains(\"watch?v\u003d\"))\nnew Handler().postDelayed(new Runnable(){\n@Override\npublic void run() {\nweb.loadUrl(\"javascript:document.getElementsByTagName(\u0027video\u0027)[0].play();\");\n}\n}, 1000);\n//Toast.makeText(WVYoutubeDl.this, \"Play Video First to Enable Download\",0).show();\n}\n});\nweb.setWebChromeClient(new WebChromeClient(){\n@Override\npublic void onProgressChanged(WebView view, int progress) {\nnew Handler(Looper.getMainLooper()).post(new Runnable(){\n@Override\npublic void run(){\nbutton_container.setVisibility(View.GONE);\n}\n});\n}\n});\nweb.loadUrl(\"https://youtube.com/\");\nbtn.setText(\"Download Video\");\nbtn.setOnClickListener(new View.OnClickListener(){\n@Override\npublic void onClick(View p1) {\nString[] vids\u003dnew String[videos.size()];\nfor(int i\u003d0;i\u003cvideos.size();i++){\nVideo v\u003dvideos.get(i);\nvids[i]\u003d(v.isAudioOnly?\"Audio\":\"Video\")+\" (\"+v.readableSize+\")\";\n}\nAlertDialog.Builder dlg\u003dnew AlertDialog.Builder(MainActivity.this);\ndlg.setTitle(\"Download\");\ndlg.setItems(vids, new android.content.DialogInterface.OnClickListener(){\n@Override\npublic void onClick(android.content.DialogInterface p1, int p2) {\ndownload_(videos.get(p2).url);\n}\n});\ndlg.show();\n}\n});\nshowAlert();\n}\n@Override\npublic void onBackPressed() {\nif(web.canGoBack())\nweb.goBack();\nelse\nsuper.onBackPressed();\n}\nprivate void showAlert(){\nnew AlertDialog.Builder(this).setTitle(\"WARNING\").setMessage(\"Downloading Youtube videos is against Google Terms of Service, do with your own risk.\").show();\n}\nprivate String readableFileSize(long size) {\nif(size \u003c\u003d 0) return \"0\";\nfinal String[] units \u003d new String[] { \"B\", \"kB\", \"MB\", \"GB\", \"TB\" };\nint digitGroups \u003d (int) (Math.log10(size)/Math.log10(1024));\nreturn new java.text.DecimalFormat(\"#,##0.#\").format(size/Math.pow(1024, digitGroups)) + \" \" + units[digitGroups];\n}\nprivate void download_(String url){\nDownloadManager dmgr \u003d (DownloadManager) this.getSystemService(DOWNLOAD_SERVICE);\nDownloadManager.Request request \u003d new DownloadManager.Request(android.net.Uri.parse(url));\nrequest.setAllowedNetworkTypes(\nDownloadManager.Request.NETWORK_WIFI\n| DownloadManager.Request.NETWORK_MOBILE)\n.setAllowedOverRoaming(false).setTitle(\"Download\")\n.setDescription(\"Downloading Video...\")\n.setDestinationInExternalPublicDir(\"/Download/\", System.currentTimeMillis()+\".mp4\");\ndmgr.enqueue(request);\n}\npublic class Video{\npublic String url;\npublic boolean isAudioOnly;\npublic long size;\npublic String readableSize;\npublic Video(String s){\nString ss\u003ds.replaceAll(\"\u0026range\u003d[\\\\d-]*\u0026\",\"\u0026\");\nurl\u003dss;\nisAudioOnly\u003dss.contains(\"mime\u003daudio\");\nsize\u003dLong.parseLong( ss.split(\"\u0026clen\u003d\")[1].split(\"\u0026\")[0]);\nreadableSize\u003dreadableFileSize(size);\n}"
  },
  {
    "متن": "تنظیم ایکون بالای صفحه",
    "کد": "//To set Actionbar icon.\n\ngetActionBar().setIcon(r.drawable.icon_name);"
  },
  {
    "متن": "جستجو در لیست ویو",
    "کد": "//This code is use to allows you to search items on your listview project.\n\n((ArrayAdapter)listview1.getAdapter()).getFilter().filter(edittext1.getText().toString());"
  },
  {
    "متن": "تغییر رنگ متن",
    "کد": "//To set a textview colour.\n\ntextview1.setTextColor(Color.parseColor(\"#000000\"));"
  },
  {
    "متن": "دریافت متن کپی شده",
    "کد": "//This code allows you to paste text from clipboad onto edittext.\n\nClipboardManager clipboard \u003d (ClipboardManager) getSystemService(CLIPBOARD_SERVICE); \nwidgethere.setText(clipboard.getText());\n// widgethere is a TextView, EditText, or something"
  },
  {
    "متن": "مخفی کردن پس زمینه دراور",
    "کد": "final LinearLayout _nav_view \u003d (LinearLayout) findViewById(R.id._nav_view); _nav_view.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(Color.TRANSPARENT));"
  },
  {
    "متن": "تایید ایمیل",
    "کد": "FirebaseAuth auth \u003d FirebaseAuth.getInstance();\ncom.google.firebase.auth.FirebaseUser user \u003d \nauth.getCurrentUser();\n\nuser.sendEmailVerification().addOnCompleteListener\n(new \nOnCompleteListener\u003cVoid\u003e()\n{ @Override\npublic void onComplete(Task task)\n{ if (task.isSuccessful()) {\n\n\n} else {\n\n}\n}});"
  },
  {
    "متن": "بازکردن لینک در واتساپ",
    "کد": "visit.setPackage(\"com.whatsapp\");"
  },
  {
    "متن": "بازکردن لینک در یوتیوب",
    "کد": "visit.setPackage(\"com.google.android.youtube\");"
  },
  {
    "متن": "کپی کردن در وب ویو",
    "کد": "webview1.setOnTouchListener(new View.OnTouchListener() {\nBoolean tF;\n@Override public boolean onTouch(View v, MotionEvent event) {\nshowMessage(\"Aan\");\ntF \u003d true;\nswitch (event.getAction()) {\ncase MotionEvent.ACTION_DOWN: tF \u003d false;\nshowMessage(\"0\");\n}\nreturn tF;\n}\n});"
  },
  {
    "متن": "گرد کردن لایوت",
    "کد": "android.graphics.drawable.GradientDrawable ed \u003d new android.graphics.drawable.GradientDrawable();\ned.setColor(Color.parseColor(\"#FFFFFF\"));\ned.setCornerRadius(110);\nlinear1.setBackground(ed);"
  },
  {
    "متن": "رنگ پروگرس بار",
    "کد": "progressBar.getProgressDrawable().setColorFilter(Color.RED, android.graphics.PorterDuff.Mode.SRC_IN);\n\n\n\n//with drawable\nandroid.graphics.drawable.Drawable progressDrawable \u003d progressBar.getProgressDrawable().mutate(); progressDrawable.setColorFilter(Color.RED, android.graphics.PorterDuff.Mode.SRC_IN); progressBar.setProgressDrawable(progressDrawable);"
  },
  {
    "متن": "رنگ متن",
    "کد": "textview1.setTextColor(Color.parseColor(\"#000000\"));"
  },
  {
    "متن": "چک کردن روت",
    "کد": "try {\n\nRuntime.getRuntime().exec(\"su\"); \n\ntextview1.setText(\"Root User\");\n\n} catch (Exception e ) {\n\ntextview1.setText(\"Normal User\");\nshowMessage(e.toString());\n\n}"
  },
  {
    "متن": "نمایش سلامت باطری",
    "کد": "//onCreate\nIntentFilter iFilter \u003d new IntentFilter(Intent.ACTION_BATTERY_CHANGED);\ngetApplicationContext().registerReceiver(mBroadcastReceiver,iFilter);\n\n\n\nprivate BroadcastReceiver mBroadcastReceiver \u003d new BroadcastReceiver() {\n@Override\npublic void onReceive(Context context, Intent intent) {\nToast.makeText(getApplicationContext(), \"Received\", Toast.LENGTH_SHORT).show();\nint health \u003d intent.getIntExtra(BatteryManager.EXTRA_HEALTH,0);\nString healthString \u003d \"\";\n// Determine the battery health from return integer value\nif(health \u003d\u003d BatteryManager.BATTERY_HEALTH_COLD){\n   healthString \u003d \"COLD\";\n}else if (health \u003d\u003d BatteryManager.BATTERY_HEALTH_DEAD){\n   healthString \u003d \"DEAD\";\n}else if (health \u003d\u003d BatteryManager.BATTERY_HEALTH_GOOD){\n   healthString \u003d \"GOOD\";\n}else if (health \u003d\u003d BatteryManager.BATTERY_HEALTH_OVERHEAT){\n   healthString \u003d \"OVER HEAT\";\n}else if (health \u003d\u003d BatteryManager.BATTERY_HEALTH_OVER_VOLTAGE){\n   healthString \u003d \"OVER VOLTAGE\";\n}else if(health \u003d\u003d BatteryManager.BATTERY_HEALTH_UNKNOWN){\n   healthString \u003d \"UNKNOWN\";\n}else if(health \u003d\u003d BatteryManager.BATTERY_HEALTH_UNSPECIFIED_FAILURE){\n   healthString \u003d \"UNSPECIFIED FAILURE\";\n}\ntextview1.setText(\"Battery Health : \" + healthString);\n}\n};"
  },
  {
    "متن": "اسکرین شات",
    "کد": "getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);"
  },
  {
    "متن": "پخش موزیک از مسیر",
    "کد": "mp \u003d MediaPlayer.create(getApplicationContext(), Uri.fromFile(new java.io.File(currentfile)));"
  },
  {
    "متن": "تنظیم اولوشن",
    "کد": "//this is code for moreblock\n_view.setElevation((int)_number);\n\n//and this is normal code\nlinear1.setElevation(10f);\n//linear1 is LinearLayout\n\nimageview1.setRlevation(10f)\n//imageview1 is LinearLayout"
  },
  {
    "متن": "تم دیالوگ",
    "کد": "//Gingerbread theme code\nyour_dialog \u003d new AlertDialog.Builder(this,AlertDialog.THEME_TRADITIONAL);\n\n//Holo dark theme code\ndialog \u003d new AlertDialog.Builder(this,AlertDialog.THEME_DEVICE_DEFAULT_DARK);\n\n//Holo light theme code\ndialog \u003d new AlertDialog.Builder(this,AlertDialog.THEME_HOLO_LIGHT);\n\n//Material dark theme code\nsetTheme(android.R.style.Theme_Material);\n\n//Material light theme code\nsetTheme(android.R.style.Theme_Material_Light);\n\n//Device default dark theme code\ndialog \u003d new AlertDialog.Builder(this,AlertDialog.THEME_DEVICE_DEFAULT_DARK);\n\n//Device default light theme code\ndialog \u003d new AlertDialog.Builder(this,AlertDialog.THEME_DEVICE_DEFAULT_LIGHT);"
  },
  {
    "متن": "نمایش نسخه",
    "کد": "String versionName \u003d \"null\";\nint versionCode \u003d -1;\ntry {\nandroid.content.pm.PackageInfo packageInfo \u003d MainActivity.this.getPackageManager().getPackageInfo(getPackageName(), 0);\nversionName \u003d packageInfo.versionName;\nversionCode \u003d packageInfo.versionCode;\n} catch (android.content.pm.PackageManager.NameNotFoundException e) {\ne.printStackTrace();\n}\n//textview set text\nTextView textViewVersionInfo \u003d (TextView) findViewById(R.id.textview1);\ntextViewVersionInfo.setText(String.format(\"Version Name: %s Version Code:%d\", versionName, versionCode));"
  },
  {
    "متن": "ارسال ایمیل",
    "کد": "Intent intent \u003d new Intent(Intent.ACTION_SENDTO); intent.setData(Uri.parse(\"mailto:\")); intent.putExtra(Intent.EXTRA_EMAIL , new String[] { \"youremail@gmail.com\" }); intent.putExtra(Intent.EXTRA_SUBJECT, \"I want help from WaladiFin App\"); startActivity(Intent.createChooser(intent, \"Email via...\"));"
  },
  {
    "متن": "دریافت اطلاعات دستگاه",
    "کد": "//Build Type\ntextview1.setText(Build.TYPE);\n\n//Build Tags\ntextview2.setText(Build.TAGS);\n\n//Build User\ntextview1.setText(Build.USER);\n\n//Build Unknown\ntextview1.setText(Build.UNKNOWN);\n\n//Build ID\ntextview1.setText(Build.ID);\n\n//Build Product\ntextview1.setText(Build.PRODUCT);\n\n//Build Display\ntextview1.setText(Build.DISPLAY);\n\n//Build Fingerprint\ntextview1.setText(Build.FINGERPRINT);\n\n//Build CPU\ntextview1.setText(Build.CPU_ABI);\n\n//Build Host\ntextview1.setText(Build.HOST);\n\n//Build Hardware\ntextview1.setText(Build.HARDWARE);\n\n//Build Serial\ntextview1.setText(Build.SERIAL);\n\n//Build Radio\ntextview1.setText(Build.RADIO);\n\n//Build Bootloader\ntextview1.setText(Build.BOOTLOADER);\n\n//Build Board\ntextview1.setText(Build.BOARD);\n\n//Build Version Security Path\ntextview1.setText(Build.VERSION.SECURITY_PATCH);\n\n//Build Brand\ntextview1.setText(Build.BRAND);\n\n//Build Version SDK\ntextview1.setText(Build.VERSION.SDK);\n\n//Get Model\ntextview1.setText(Build.MANUFACTURER.concat(\" \".concat(Build.MODEL)));\n\n//Get Realease\ntextview1.setText(Build.VERSION.RELEASE);"
  },
  {
    "متن": "تنظیمات دستگاه",
    "کد": "Intent dialogIntent \u003d new Intent(android.provider.Settings.ACTION_SETTINGS); dialogIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); startActivity(dialogIntent);"
  },
  {
    "متن": "پشتیبانی از ۳۲ بیت",
    "کد": "TextView.setText(Build.SUPPORTED_32_BIT_ABIS.toString());"
  },
  {
    "متن": "اعلان",
    "کد": "Notification.Builder mBuilder \u003d new Notification.Builder(MainActivity.this);mBuilder.setSmallIcon(R.drawable.default_image);mBuilder.setContentTitle(_title);mBuilder.setContentText(_message);NotificationManager notificationManager \u003d (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);int onx \u003d 1;notificationManager.notify(onx, mBuilder.build());"
  },
  {
    "متن": "دریافت زبان دستگاه",
    "کد": " language \u003d Locale.getDefault().getDisplayLanguage();"
  },
  {
    "متن": "اجرا برنامه",
    "کد": "Intent launchIntent \u003d getPackageManager().getLaunchIntentForPackage(\"com.package.address\"); \nstartActivity(launchIntent);"
  },
  {
    "متن": "نمایش ادرس وب ویو",
    "کد": "textview1.setText(webview1.getCertificate().toString());"
  },
  {
    "متن": "تنظیم ایکون دیالوگ",
    "کد": "Dialog.setIcon(R.drawable.ic_add image name_here);"
  },
  {
    "متن": "تنظیم متن اکشن بار",
    "کد": "getActionBar().setSubtitle(\"Subtitle\");"
  },
  {
    "متن": "دیالوگ خدماتی",
    "کد": "private class AsyncTaskEx extends AsyncTask\u003cVoid, Void, Void\u003e {\n\n    /** The system calls this to perform work in a worker thread and\n    * delivers it the parameters given to AsyncTask.execute() */\n    @Override\n    protected Void doInBackground(Void... arg0) {\n        StartTimer();//call your method here it will run in background\n        return null;\n    }\n\n    /** The system calls this to perform work in the UI thread and delivers\n    * the result from doInBackground() */\n    @Override\n    protected void onPostExecute(Void result) {\n        //Write some code you want to execute on UI after doInBackground() completes\n        return ;\n    }\n\n    @Override\n    protected void onPreExecute() {\n        //Write some code you want to execute on UI before doInBackground() starts\n        return ;\n    }\n}\n\n\n//Write this class inside your Activity and call where you want execute your method\n\nnew AsyncTaskEx().execute();"
  },
  {
    "متن": "منشن",
    "کد": "linear1.setOnTouchListener(new View.OnTouchListener() {\n@Override\npublic boolean onTouch(View p1, MotionEvent p2){\nswitch(p2.getAction()) {\ncase MotionEvent.ACTION_DOWN: \ny1 \u003d p2.getY();\nx1 \u003d p2.getX();\nbreak;\ncase MotionEvent.ACTION_UP: \ny2 \u003d p2.getY();\nx2 \u003d p2.getX();\nif (((y1 - y2) \u003c -250)) {\nshowMessage(\"Down\");\n} \nif (((y2 - y1) \u003c -250)) {\nshowMessage(\"Up\");\n}\nif (((x1 - x2) \u003c -250)) {\nshowMessage(\"Right\");\n} \nif (((x2 - x1) \u003c -250)) {\nshowMessage(\"Left\");\n}\nbreak;\n}\nreturn true;\n}});\n\n//Create Number Variable y1, y2, x1, x2"
  },
  {
    "متن": "اکشن بار فول اسکرین",
    "کد": "//full screen\ngetWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);\n\n//unfullscreen\ngetWindow().clearFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);"
  },
  {
    "متن": "ارسال پیام",
    "کد": "https://m.me/IDpagefacebook"
  },
  {
    "متن": "نمایش و مخفی کردن اکشن بار",
    "کد": "/*Use Below Two Codes When Support Library Is Not Active*/\n\n//show actionbar \n getActionBar().show() \n\n//hide ActionBar \n getActionBar().hide();\n\n\n/*Use Below Two Codes When Support Library Is Active*/\n\n//show actionbar \n getSupportActionBar().show() \n\n//hide ActionBar \n getSupportActionBar().hide();"
  },
  {
    "متن": "کلیک",
    "کد": "button1.setOnClickListener(new View.OnClickListener() {\npublic void onClick(View v) {\n// your code area\n}\n});"
  },
  {
    "متن": "تنظیمات وای فای",
    "کد": "final android.net.wifi.WifiManager wifi \u003d (android.net.wifi.WifiManager)getSystemService(Context.WIFI_SERVICE);\n\nif (wifi.isWifiEnabled()) {\n\nwifi.setWifiEnabled(false);\nshowMessage(\"Wi-Fi \");\n\n} else {\n\nwifi.setWifiEnabled(true);\nshowMessage(\"Wi-Fi \");\n\n}"
  },
  {
    "متن": "دیالوگ رادیو باتون",
    "کد": "AlertDialog.Builder builderSingle \u003d new AlertDialog.Builder(MainActivity.this);\nbuilderSingle.setIcon(R.drawable.ic_launcher);\nbuilderSingle.setTitle(\"Select One Name\");\n\nfinal ArrayAdapter\u003cString\u003e arrayAdapter \u003d new ArrayAdapter\u003cString\u003e(MainActivity.this, android.R.layout.select_dialog_singlechoice);\narrayAdapter.add(\"Hardik\");\narrayAdapter.add(\"Archit\");\narrayAdapter.add(\"Jignesh\");\narrayAdapter.add(\"Umang\");\narrayAdapter.add(\"Gatti\");\n\nbuilderSingle.setNegativeButton(\"cancel\", new DialogInterface.OnClickListener() {\n            @Override\n            public void onClick(DialogInterface dialog, int which) {\n                dialog.dismiss();\n            }\n        });\n\nbuilderSingle.setAdapter(arrayAdapter, new DialogInterface.OnClickListener() {\n            @Override\n            public void onClick(DialogInterface dialog, int which) {\n                String strName \u003d arrayAdapter.getItem(which);\n                AlertDialog.Builder builderInner \u003d new AlertDialog.Builder(MainActivity.this);\n                builderInner.setMessage(strName);\n                builderInner.setTitle(\"Your Selected Item is\");\n                builderInner.setPositiveButton(\"Ok\", new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface dialog,int which) {\n                                dialog.dismiss();\n                            }\n                        });\n                builderInner.show();\n            }\n        });\nbuilderSingle.show();"
  },
  {
    "متن": "باطری",
    "کد": "//OnCreate\nIntentFilter iFilter \u003d new IntentFilter(Intent.ACTION_BATTERY_CHANGED);\ngetApplicationContext().registerReceiver(mBroadcastReceiver,iFilter);\n\n\n\nprivate BroadcastReceiver mBroadcastReceiver \u003d new BroadcastReceiver() {\n@Override\npublic void onReceive(Context context, Intent intent) {\nfloat temperature \u003d (float)(intent.getIntExtra(BatteryManager.EXTRA_TEMPERATURE,0))/10;\ntextview1.setText(\"Battery Temperature\n\" + temperature +\" \"+ (char) 0x00B0 +\"C\");\n}\n};"
  },
  {
    "متن": "تنظیم ایکون در اکشن بار",
    "کد": "getActionBar().setIcon(R.drawable.icontitle);"
  },
  {
    "متن": "اشتراک گذاری",
    "کد": "Intent i \u003d new Intent(android.content.Intent.ACTION_SEND);i.setType(\"text/plain\"); i.putExtra(android.content.Intent.EXTRA_TEXT,share); startActivity(Intent.createChooser(i,\"share using\"));"
  },
  {
    "متن": "نمایش ویدیو در یوتیوب ",
    "کد": "data:text/html,\u003chtml\u003e\u003cbody\u003e\u003ciframe width\u003d\"350\" height\u003d\"250\" src\u003d\"https://www.youtube.com/embed/VurTJv3ObG4\" frameborder\u003d\"0\" allow\u003d\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003e\u003c/iframe\u003e"
  },
  {
    "متن": "جهت گیری",
    "کد": "//Landscape orientation code\nsetRequestedOrientation(android.content.pm.ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);\n\n//Portrait orientation code\nsetRequestedOrientation(android.content.pm.ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);"
  },
  {
    "متن": "رنگ اکشن بار",
    "کد": "/*ActionBar Color...*/\n\nActionBar actionBar \u003d getActionBar(); actionBar.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(Color.parseColor(\"#191919\")));\nif (Build.VERSION.SDK_INT \u003e\u003d Build.VERSION_CODES.LOLLIPOP) {\n    Window w \u003d MainActivity.this.getWindow();\n    w.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);\n    w.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);\n    w.setStatusBarColor(Color.parseColor(\"#000000\"));\n}\n\n/*Change ActionBar Title Color*/\n\ngetActionBar().setTitle(Html.fromHtml(\"\u003cfont color\u003d\u0027#FF0000\u0027\u003eColor Tools\u003c/font\u003e\"));\n\n/*Change In Action Bar Header / Statues Bar */\n\ntry {\nif (Build.VERSION.SDK_INT \u003e\u003d 21) {\ngetWindow().clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);\ngetWindow().addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);\ngetWindow().setStatusBarColor(0xFF263238);\nheaders.setElevation(10f); //your actionbar linear\n}\n}\ncatch (Exception e) {\n};"
  },
  {
    "متن": "پیام سمت چپ",
    "کد": "Toast toast1 \u003d Toast.makeText(this, \"\".concat(_txt), Toast.LENGTH_SHORT);\n\ntoast1.setGravity(Gravity.LEFT,0,0);\n\ntoast1.show();"
  },
  {
    "متن": "تنظیم ایکون در ادیت تکست",
    "کد": "edittext1.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_search_white, 0, 0, 0);"
  },
  {
    "متن": "منوی پاپ اپ",
    "کد": "PopupMenu popup \u003d new PopupMenu(MainActivity.this, button1);\n\nMenu menu \u003d popup.getMenu();\nmenu.add(\"Aan\");\nmenu.add(\"Gabriel\");\n\n\npopup.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {\n\npublic boolean onMenuItemClick(MenuItem item) {\nswitch (item.getTitle().toString()) {\ncase \"Aan\":\nshowMessage(\"Aan clicked\");\nreturn true;\n\ncase \"Gabriel\":\nshowMessage(\"Gabriel Clicked\");\nreturn true;\n\ndefault: return false;\n}\n}\n});\n\n\npopup.show();"
  },
  {
    "متن": "دکمه پیام",
    "کد": "Toast toast1 \u003d Toast.makeText(this, \"\".concat(_txt), Toast.LENGTH_SHORT);\n\ntoast1.setGravity(Gravity.BOTTOM,0,0);\n\ntoast1.show();"
  },
  {
    "متن": "متن اکشن بار",
    "کد": "getActionBar().setTitle(\"Title\");"
  },
  {
    "متن": "نمایش درصد باطری",
    "کد": "BatteryManager bm \u003d (BatteryManager)getSystemService(BATTERY_SERVICE);\nint batLevel \u003d bm.getIntProperty(BatteryManager.BATTERY_PROPERTY_CAPACITY);\ntextview1.setText(Integer.toString(batLevel));"
  },
  {
    "متن": "کلیک طولانی",
    "کد": "button1.setOnLongClickListener(new View.OnLongClickListener() {@Override public boolean onLongClick(View v){ Toast.makeText(getApplicationContext(),\"Long Clicked!\",Toast.LENGTH_LONG).show();return false;}});"
  },
  {
    "متن": "دکمه پیام سمت راست",
    "کد": "Toast toast1 \u003d Toast.makeText(this, \"\".concat(_txt), Toast.LENGTH_SHORT);\n\ntoast1.setGravity(Gravity.BOTTOM | Gravity.RIGHT,0,0);\n\ntoast1.show();"
  },
  {
    "متن": "روشن کردن وای فای",
    "کد": "\nfinal android.net.wifi.WifiManager wifi \u003d (android.net.wifi.WifiManager)getSystemService(Context.WIFI_SERVICE);\n\nif (wifi.isWifiEnabled()) {\n    wifi.setWifiEnabled(false);\n    showMessage(\"Wifi Disable\");\n} else {\n    wifi.setWifiEnabled(true);\n    showMessage(\"Wifi Enable\");\n}\n\n\n// add permission\n/*\n\u003cuses-permission android:name\u003d\"android.permission.ACCESS_WIFI_STATE\" /\u003e\n\u003cuses-permission android:name\u003d\"android.permission.CHANGE_WIFI_STATE\" /\u003e\n*/"
  },
  {
    "متن": "غیرفعال کردن زوم در وب ویو",
    "کد": "webview1.getSettings().setBuiltInZoomControls(false);webview1.getSettings().setDisplayZoomControls(true);"
  },
  {
    "متن": "تنظیم رنگ پس زمینه",
    "کد": "textview1.setBackgroundColor(Color.parseColor(\"#ff0000\"));\n\n/*Above textview1 BackgroundColor Is Red*/\n\n/*OR*/\n\n\nlinear1.setBackgroundColor(Color.parseColor(\"#0000ff\"));\n\n/*Above linear1 BackgroundColor Is Blue*/"
  },
  {
    "متن": "پایان",
    "کد": "finishAffinity();"
  },
  {
    "متن": "صورتحساب برنامه",
    "کد": "//             \"implements BillingProcessor.IBillingHandler\"\npublic class MainActivity extends AppCompatActivity implements BillingProcessor.IBillingHandler\n{\n\n\t@Override\n\tpublic void onProductPurchased(String p1, TransactionDetails p2)\n\t{\n\t\t//   \n\t}\n\n\t@Override\n\tpublic void onPurchaseHistoryRestored()\n\t{\n\t\t//  \n\t}\n\n\t@Override\n\tpublic void onBillingError(int p1, Throwable p2)\n\t{\n\t\t//  \n\t}\n\n\t@Override\n\tpublic void onBillingInitialized()\n\t{\n\t\t// )\n\t}\n\n\n//Y  (null -  API   Google Play Console  ,  null   ,     .   onCreate\nbp \u003d new BillingProcessor(this, null, this);\nbp.initialize();\n\n\n\n// \nbp.loadOwnedPurchasesFromGoogle();\n\n\n\n//   onCreate\n@Override\n\tprotected void onActivityResult(int requestCode, int resultCode, Intent data)\n\t{\n\t\t// TODO: Implement this method\n\t\tif(!bp.handleActivityResult(requestCode, resultCode, data))\n\t\tsuper.onActivityResult(requestCode, resultCode, data);\n\t}\n@Override\n\tprotected void onDestroy()\n\t{\n\t\t// TODO: Implement this method\n\t\tif(bp !\u003dnull)\n\t\t\tbp.release();\n\t\tsuper.onDestroy();\n\t}\n\n\n\n\n//  \"android.test.purchased\" () \n\n// \nbp.purchase(Main2Activity.this, \"android.test.purchased\");\n\n//\nbp.subscribe(Main2Activity.this, \"android.test.purchased\");\n\n// \nbp.consumePurchase(\"android.test.purchased\");\n\n\n\n// !"
  },
  {
    "متن": "لیست ایکون های برنامه",
    "کد": "Intent startupIntent \u003d new Intent(Intent.ACTION_MAIN); \t\tstartupIntent.addCategory(Intent.CATEGORY_LAUNCHER);  \t\tfinal android.content.pm.PackageManager pm \u003d getPackageManager(); \t\tList\u003candroid.content.pm.ResolveInfo\u003e activities \u003d pm.queryIntentActivities(startupIntent,0);   \t\tCollections.sort(activities, new Comparator\u003candroid.content.pm.ResolveInfo\u003e() {  \t\t\t\tpublic int compare(android.content.pm.ResolveInfo a, android.content.pm.ResolveInfo b) {  \t\t\t\t\tandroid.content.pm.PackageManager pm \u003d getPackageManager();  \t\t\t\t\treturn String.CASE_INSENSITIVE_ORDER.compare(  \t\t\t\t\t\ta.loadLabel(pm).toString(),  \t\t\t\t\t\tb.loadLabel(pm).toString());  \t\t\t\t}  \t\t\t});   \t\tArrayAdapter\u003candroid.content.pm.ResolveInfo\u003e adapter \u003d new ArrayAdapter\u003candroid.content.pm.ResolveInfo\u003e(  \t\t\tthis, android.R.layout.simple_list_item_1, activities) {  \t\t\tpublic View getView(int pos, View convertView, ViewGroup parent) { TextView tv \u003d new TextView(MainActivity.this);  \t\t\t\tandroid.content.pm.ResolveInfo ri \u003d getItem(pos);  \t\t\ttv.setText(ri.loadLabel(pm));  \tLinearLayout lin \u003d new LinearLayout(MainActivity.this);ImageView iv \u003d new ImageView(MainActivity.this);iv.setImageDrawable(ri.loadIcon(pm));lin.addView(iv);lin.addView(tv);tv.setGravity(Gravity.CENTER_VERTICAL);tv.setPadding(16,0,0,0);tv.setTextSize(16);tv.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT ));LinearLayout.LayoutParams p \u003d\tnew LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT,LinearLayout.LayoutParams.MATCH_PARENT);p.width \u003d 70;p.height \u003d 70;p.bottomMargin \u003d 4;p.topMargin \u003d 4;iv.setLayoutParams(p);lin.setPadding(6,6,6,6);return lin;  \t\t\t}  \t\t};  \t\tlistview1.setAdapter(adapter); \t\t \t\tlistview1.setOnItemClickListener(new AdapterView.OnItemClickListener() {  \t\t\t\t@Override \t\t\t\tpublic void onItemClick(AdapterView adapter, View v, int position, long id) \t\t\t\t{ \t\t\t\t\tandroid.content.pm.ResolveInfo resolveInfo \u003d (android.content.pm.ResolveInfo)adapter.getItemAtPosition(position);  \t\t\t\t\tandroid.content.pm.ActivityInfo activityInfo \u003d resolveInfo.activityInfo;  \t\t\t\t\tif (activityInfo \u003d\u003d null) return;  \t\t\t\t\tIntent i \u003d new Intent(Intent.ACTION_MAIN);  \t\t\t\t\ti.setClassName(activityInfo.applicationInfo.packageName, activityInfo.name);  \t\t\t\t\tstartActivity(i); \t\t\t\t}  \t\t\t \t\t});;"
  },
  {
    "متن": "ارسال اس ام اس",
    "کد": "Uri uri \u003d Uri.parse(\"smsto:\"+Number);   \nIntent dp \u003d new Intent(Intent.ACTION_SENDTO, uri);   \ndp.putExtra(\"sms_body\", Msg);   \nstartActivity(dp);\n\n//In Number Your or User Can Put Phone Number To Whom They Want Send SMS\n\n//In Msg They Can Write There Message"
  },
  {
    "متن": "کالر پیکر",
    "کد": "public static interface OnColorChangedListener\n\t{\n\t\tpublic void onColorChanged(ColorPicker picker, int color);\n\t}\nclass ColorPicker extends LinearLayout\n{\t\n\tprivate SeekBar r;\n\tprivate SeekBar g;\n\tprivate SeekBar b;\n\tprivate EditText hex;\n\tprivate TextView colorShow;\n\tprivate SeekBar.OnSeekBarChangeListener listener;\n\tprivate OnColorChangedListener l;\n\tpublic ColorPicker(Context c)\n\t{\n\t\tsuper(c);\n\t\tinit();\n\t}\n\t\n\tprivate void init(){\n\t\tsetPadding(16, 16, 16, 16);\n\t\tsetGravity(Gravity.CENTER);\n\t\tsetLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));\n\t\tcolorShow \u003d new TextView(getContext());\n\t\tcolorShow.setLayoutParams(new ViewGroup.LayoutParams(60, 60));\n\t\taddView(colorShow);\t\n\t\tlistener \u003d new SeekBar.OnSeekBarChangeListener(){\n\t\t\t@Override\n\t\t\tpublic void onProgressChanged(SeekBar p1, int p2, boolean p3)\n\t\t\t{\n\t\t\t\tint color \u003d Color.rgb(r.getProgress(), g.getProgress(), b.getProgress());\n\t\t\t\tString temp \u003d String.format(\"%1\\$08x\", color); //sketchware: TODO \"%1\\$0x\"\n\t\t\t\tString result \u003d temp.substring(2);\n\t\t\t\thex.setText(\"#\" + result);\n\t\t\t\thex.getBackground().setColorFilter(color, PorterDuff.Mode.SRC_IN);\n\t\t\t\tcolorShow.setBackgroundColor(color);\n\t\t\t\t\n\t\t\t\tif(l !\u003d null) l.onColorChanged(ColorPicker.this, color);\n\t\t\t}\n\t\t\t@Override public void onStartTrackingTouch(SeekBar p1){}\n\t\t\t@Override public void onStopTrackingTouch(SeekBar p1){}\n\t\t};\n\t\tLinearLayout lay2 \u003d new LinearLayout(getContext());\n\t\tlay2.setOrientation(VERTICAL);\n\t\tlay2.setPadding(8, 0, 8, 8);\n\t\tlay2.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));\n\t\thex \u003d new EditText(getContext());\n\t\tViewGroup.MarginLayoutParams params \u003d new ViewGroup.MarginLayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\n\t\tparams.setMargins(16, 0, 16, 0);\n\t\thex.setLayoutParams(params);\n\t\thex.setImeOptions(android.view.inputmethod.EditorInfo.IME_ACTION_DONE);\n\t\thex.setText(\"#000000\");\n\t\thex.setOnEditorActionListener(new TextView.OnEditorActionListener(){\n\t\t\t\t@Override\n\t\t\t\tpublic boolean onEditorAction(TextView text, int code, KeyEvent event)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tint color \u003d Color.parseColor(text.getText().toString());\n\t\t\t\t\t\tr.setProgress(Color.red(color));\n\t\t\t\t\t\tg.setProgress(Color.green(color));\n\t\t\t\t\t\tb.setProgress(Color.blue(color));\n\t\t\t\t\t} catch(Exception e){\n\t\t\t\t\t\tToast.makeText(getContext(), \"Color code is wrong\", Toast.LENGTH_SHORT).show();\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\tlay2.addView(hex);\n\t\tr \u003d new SeekBar(getContext());\n\t\tsetProgressColor(r, 0xffcc5577);\n\t\tr.setMax(255);\n\t\tr.setOnSeekBarChangeListener(listener);\n\t\tlay2.addView(r);\n\t\tg \u003d new SeekBar(getContext());\n\t\tsetProgressColor(g, 0xff339977);\n\t\tg.setMax(255);\n\t\tg.setOnSeekBarChangeListener(listener);\n\t\tlay2.addView(g);\n\t\tb \u003d new SeekBar(getContext());\n\t\tsetProgressColor(b, 0xff6077bb);\n\t\tb.setMax(255);\n\t\tb.setOnSeekBarChangeListener(listener);\n\t\tlay2.addView(b);\n\t\taddView(lay2);\n\t\tint color \u003d Color.parseColor(hex.getText().toString());\n\t\tr.setProgress(Color.red(color));\n\t\tg.setProgress(Color.green(color));\n\t\tb.setProgress(Color.blue(color));\n\t\tcolorShow.setBackgroundColor(color);\n\t}\n\tpublic void setColor(int color)\n\t{\n\t\thex.setText(\"#\" + String.format(\"%1\\$08x\", color).substring(2));\n\t\tr.setProgress(Color.red(color));\n\t\tg.setProgress(Color.green(color));\n\t\tb.setProgress(Color.blue(color));\n\t}\n\tpublic int getColor(boolean refreshFromSlider)\n\t{\n\t\tif(refreshFromSlider) listener.onProgressChanged(null, 0, false);\n\t\treturn Color.parseColor(hex.getText().toString());\n\t}\n\tpublic int getColor()\n\t{\n\t\treturn getColor(true);\n\t}\n\tpublic void setOnColorChangedListener(OnColorChangedListener l)\n\t{\n\t\tthis.l \u003d l;\n\t}\n\tprivate void setProgressColor(AbsSeekBar bar, int color)\n\t{\n\t\tbar.getProgressDrawable().setColorFilter(color, PorterDuff.Mode.SRC_IN); bar.getThumb().setColorFilter(color, PorterDuff.Mode.SRC_IN);\n\t}\n}\n\n// ColorPicker coll \u003d new ColorPicker(MainActivity.this);\n// linear1.addView(coll);\n// Set Color: coll.setColor(Color.parseColor(\"#FFFF00\"));\n// To Get Color\ncoll.getColor();"
  },
  {
    "متن": "رنگ فب",
    "کد": "final ObjectAnimator animator \u003d ObjectAnimator.ofInt(_fab, \"backgroundTint\", Color.rgb(0, 121, 107), Color.rgb(226, 143, 34));\nanimator.setDuration(2000L);\nanimator.setEvaluator(new ArgbEvaluator());\nanimator.setInterpolator(new DecelerateInterpolator(2));\nanimator.addUpdateListener(new ObjectAnimator.AnimatorUpdateListener() {\n    @Override\n    public void onAnimationUpdate(ValueAnimator animation) {\n        int animatedValue \u003d (int) animation.getAnimatedValue();\n        _fab.setBackgroundTintList(android.content.res.ColorStateList.valueOf(animatedValue));\n    }\n});\nanimator.start();"
  },
  {
    "متن": "اجرای زمان",
    "کد": "//You need permission example:\n\u003cuses-permission android:name\u003d\"android.permission.READ_PHONE_STATE\" /\u003e\n\n\n//Put onCreate\n}\nprivate final int REQUEST_PERMISSION_PHONE_STATE\u003d1;\n\nprivate void showPhoneStatePermission() {\n    int permissionCheck \u003d android.support.v4.content.ContextCompat.checkSelfPermission(this, android.Manifest.permission.READ_PHONE_STATE);\n    if (permissionCheck !\u003d android.content.pm.PackageManager.PERMISSION_GRANTED) {\n        if (android.support.v4.app.ActivityCompat.shouldShowRequestPermissionRationale(this,\n                android.Manifest.permission.READ_PHONE_STATE)) {\n                showExplanation(\"Permission Needed\", \"Rationale\", android.Manifest.permission.READ_PHONE_STATE, REQUEST_PERMISSION_PHONE_STATE);\n        } else {\n            requestPermission(android.Manifest.permission.READ_PHONE_STATE, REQUEST_PERMISSION_PHONE_STATE);\n        }\n    } else {\n        Toast.makeText(MainActivity.this, \"Permission (already) Granted!\", Toast.LENGTH_SHORT).show();\n    }\n}\n\n @Override\npublic void onRequestPermissionsResult(\n        int requestCode,\n        String permissions[],\n        int[] grantResults) {\n    switch (requestCode) {\n        case REQUEST_PERMISSION_PHONE_STATE:\n            if (grantResults.length \u003e 0\n                    \u0026\u0026 grantResults[0] \u003d\u003d android.content.pm.PackageManager.PERMISSION_GRANTED) {\n                Toast.makeText(MainActivity.this, \"Permission Granted!\", Toast.LENGTH_SHORT).show();\n            } else {\n                Toast.makeText(MainActivity.this, \"Permission Denied!\", Toast.LENGTH_SHORT).show();\n            }\n    }\n}\n\nprivate void showExplanation(String title,\n                             String message,\n                             final String permission,\n                             final int permissionRequestCode) {\n    AlertDialog.Builder builder \u003d new AlertDialog.Builder(this);\n    builder.setTitle(title)\n            .setMessage(message)\n            .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {\n                public void onClick(DialogInterface dialog, int id) {\n                    requestPermission(permission, permissionRequestCode);\n                }\n            });\n    builder.create().show();\n}\n\nprivate void requestPermission(String permissionName, int permissionRequestCode) {\n    android.support.v4.app.ActivityCompat.requestPermissions(this,\n            new String[]{permissionName}, permissionRequestCode);\n}\n\n\npublic void nothing() {"
  },
  {
    "متن": "پیام وسط چین",
    "کد": "Toast toast1 \u003d Toast.makeText(this, \"\".concat(_txt), Toast.LENGTH_SHORT);\n\ntoast1.setGravity(Gravity.TOP,0,0);\n\ntoast1.show();"
  },
  {
    "متن": "گرد کردن عکس",
    "کد": "//First Code\n\nBitmap bm \u003d ((android.graphics.drawable.BitmapDrawable) imageview1.getDrawable()).getBitmap(); imageview1.setImageBitmap(getRoundedCornerBitmap(bm, 360)); \n\n\n//Second Code\n\n} public static Bitmap getRoundedCornerBitmap(Bitmap bitmap, int pixels) { Bitmap output \u003d Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Bitmap.Config.ARGB_8888); Canvas canvas \u003d new Canvas(output); final int color \u003d 0xff424242; final Paint paint \u003d new Paint(); final Rect rect \u003d new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight()); final RectF rectF \u003d new RectF(rect); final float roundPx \u003d pixels; paint.setAntiAlias(true); canvas.drawARGB(0, 0, 0, 0); paint.setColor(color); canvas.drawRoundRect(rectF, roundPx, roundPx, paint); paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN)); canvas.drawBitmap(bitmap, rect, rect, paint); return output;"
  },
  {
    "متن": "پشتیبانی ۶۴ بیت",
    "کد": "TextView.setText(Build.SUPPORTED_64_BIT_ABIS.toString());"
  },
  {
    "متن": "گرادینت",
    "کد": "//Gradient Code Starts Here\nint[] colors \u003d {Color.rgb(138,41,81),Color.rgb(41,53,158)};\nandroid.graphics.drawable.GradientDrawable gd \u003d new android.graphics.drawable.GradientDrawable(android.graphics.drawable.GradientDrawable.Orientation.BR_TL, colors);\ngd.setCornerRadius(0f); \ngd.setStroke(0,Color.WHITE);\nif(android.os.Build.VERSION.SDK_INT \u003e\u003d 16) {linear1.setBackground(gd); } else {linear1.setBackgroundDrawable(gd);}\n//End of Gradient Generator"
  },
  {
    "متن": "کلاس فایل ها",
    "کد": "imageview1.setBackground(Drawables.getSelectableDrawableFor(Color.parseColor(\"#404040\")));\nimageview1.setClickable(true);\n\n}\n\npublic static class Drawables {\n    public static android.graphics.drawable.Drawable getSelectableDrawableFor(int color) {\n        if (Build.VERSION.SDK_INT \u003c Build.VERSION_CODES.LOLLIPOP) {\n            android.graphics.drawable.StateListDrawable stateListDrawable \u003d new android.graphics.drawable.StateListDrawable();\n            stateListDrawable.addState(\n                new int[]{android.R.attr.state_pressed},\n                new android.graphics.drawable.ColorDrawable(Color.parseColor(\"#ffffff\"))\n            );\n            stateListDrawable.addState(\n                new int[]{android.R.attr.state_focused},\n                new android.graphics.drawable.ColorDrawable(Color.parseColor(\"#00ffffff\"))\n            );\n            stateListDrawable.addState(\n                new int[]{},\n                new android.graphics.drawable.ColorDrawable(Color.parseColor(\"#00ffffff\"))\n            );\n            return stateListDrawable;\n        } else {\n            android.content.res.ColorStateList pressedColor \u003d android.content.res.ColorStateList.valueOf(color);\n            android.graphics.drawable.ColorDrawable defaultColor \u003d new android.graphics.drawable.ColorDrawable(Color.parseColor(\"#00ffffff\"));\n            \nandroid.graphics.drawable.Drawable rippleColor \u003d getRippleColor(color);\n            return new android.graphics.drawable.RippleDrawable(\n                pressedColor,\n                defaultColor,\n                rippleColor\n            );\n        }\n    }\n\n    private static android.graphics.drawable.Drawable getRippleColor(int color) {\n        float[] outerRadii \u003d new float[8];\n        Arrays.fill(outerRadii, 0);\n        android.graphics.drawable.shapes.RoundRectShape r \u003d new android.graphics.drawable.shapes.RoundRectShape(outerRadii, null, null);\n        \nandroid.graphics.drawable.ShapeDrawable shapeDrawable \u003d new \nandroid.graphics.drawable.ShapeDrawable(r);\n        shapeDrawable.getPaint().setColor(color);\n        return shapeDrawable;\n    }\n \n    private static int lightenOrDarken(int color, double fraction) {\n        if (canLighten(color, fraction)) {\n            return lighten(color, fraction);\n        } else {\n            return darken(color, fraction);\n        }\n    }\n \n    private static int lighten(int color, double fraction) {\n        int red \u003d Color.red(color);\n        int green \u003d Color.green(color);\n        int blue \u003d Color.blue(color);\n        red \u003d lightenColor(red, fraction);\n        green \u003d lightenColor(green, fraction);\n        blue \u003d lightenColor(blue, fraction);\n        int alpha \u003d Color.alpha(color);\n        return Color.argb(alpha, red, green, blue);\n    }\n \n    private static int darken(int color, double fraction) {\n        int red \u003d Color.red(color);\n        int green \u003d Color.green(color);\n        int blue \u003d Color.blue(color);\n        red \u003d darkenColor(red, fraction);\n        green \u003d darkenColor(green, fraction);\n        blue \u003d darkenColor(blue, fraction);\n        int alpha \u003d Color.alpha(color);\n \n        return Color.argb(alpha, red, green, blue);\n    }\n \n    private static boolean canLighten(int color, double fraction) {\n        int red \u003d Color.red(color);\n        int green \u003d Color.green(color);\n        int blue \u003d Color.blue(color);\n        return canLightenComponent(red, fraction)\n            \u0026\u0026 canLightenComponent(green, fraction)\n            \u0026\u0026 canLightenComponent(blue, fraction);\n    }\n \n    private static boolean canLightenComponent(int colorComponent, double fraction) {\n        int red \u003d Color.red(colorComponent);\n        int green \u003d Color.green(colorComponent);\n        int blue \u003d Color.blue(colorComponent);\n        return red + (red * fraction) \u003c 255\n            \u0026\u0026 green + (green * fraction) \u003c 255\n            \u0026\u0026 blue + (blue * fraction) \u003c 255;\n    }\n \n    private static int darkenColor(int color, double fraction) {\n        return (int) Math.max(color - (color * fraction), 0);\n    }\n \n    private static int lightenColor(int color, double fraction) {\n        return (int) Math.min(color + (color * fraction), 255);\n    }\n}\npublic static class CircleDrawables {\n    public static android.graphics.drawable.Drawable getSelectableDrawableFor(int color) {\n        if (Build.VERSION.SDK_INT \u003c Build.VERSION_CODES.LOLLIPOP) {\n            android.graphics.drawable.StateListDrawable stateListDrawable \u003d new android.graphics.drawable.StateListDrawable();\n            stateListDrawable.addState(\n                new int[]{android.R.attr.state_pressed},\n                new android.graphics.drawable.ColorDrawable(Color.parseColor(\"#ffffff\"))\n            );\n            stateListDrawable.addState(\n                new int[]{android.R.attr.state_focused},\n                new android.graphics.drawable.ColorDrawable(Color.parseColor(\"#00ffffff\"))\n            );\n            stateListDrawable.addState(\n                new int[]{},\n                new android.graphics.drawable.ColorDrawable(Color.parseColor(\"#00ffffff\"))\n            );\n            return stateListDrawable;\n        } else {\n            android.content.res.ColorStateList pressedColor \u003d android.content.res.ColorStateList.valueOf(color);\n            android.graphics.drawable.ColorDrawable defaultColor \u003d new android.graphics.drawable.ColorDrawable(Color.parseColor(\"#00ffffff\"));\n            \nandroid.graphics.drawable.Drawable rippleColor \u003d getRippleColor(color);\n            return new android.graphics.drawable.RippleDrawable(\n                pressedColor,\n                defaultColor,\n                rippleColor\n            );\n        }\n    }\n\n    private static android.graphics.drawable.Drawable getRippleColor(int color) {\n        float[] outerRadii \u003d new float[180];\n        Arrays.fill(outerRadii, 80);\n        android.graphics.drawable.shapes.RoundRectShape r \u003d new android.graphics.drawable.shapes.RoundRectShape(outerRadii, null, null);\n        \nandroid.graphics.drawable.ShapeDrawable shapeDrawable \u003d new \nandroid.graphics.drawable.ShapeDrawable(r);\n        shapeDrawable.getPaint().setColor(color);\n        return shapeDrawable;\n    }\n \n    private static int lightenOrDarken(int color, double fraction) {\n        if (canLighten(color, fraction)) {\n            return lighten(color, fraction);\n        } else {\n            return darken(color, fraction);\n        }\n    }\n \n    private static int lighten(int color, double fraction) {\n        int red \u003d Color.red(color);\n        int green \u003d Color.green(color);\n        int blue \u003d Color.blue(color);\n        red \u003d lightenColor(red, fraction);\n        green \u003d lightenColor(green, fraction);\n        blue \u003d lightenColor(blue, fraction);\n        int alpha \u003d Color.alpha(color);\n        return Color.argb(alpha, red, green, blue);\n    }\n \n    private static int darken(int color, double fraction) {\n        int red \u003d Color.red(color);\n        int green \u003d Color.green(color);\n        int blue \u003d Color.blue(color);\n        red \u003d darkenColor(red, fraction);\n        green \u003d darkenColor(green, fraction);\n        blue \u003d darkenColor(blue, fraction);\n        int alpha \u003d Color.alpha(color);\n \n        return Color.argb(alpha, red, green, blue);\n    }\n \n    private static boolean canLighten(int color, double fraction) {\n        int red \u003d Color.red(color);\n        int green \u003d Color.green(color);\n        int blue \u003d Color.blue(color);\n        return canLightenComponent(red, fraction)\n            \u0026\u0026 canLightenComponent(green, fraction)\n            \u0026\u0026 canLightenComponent(blue, fraction);\n    }\n \n    private static boolean canLightenComponent(int colorComponent, double fraction) {\n        int red \u003d Color.red(colorComponent);\n        int green \u003d Color.green(colorComponent);\n        int blue \u003d Color.blue(colorComponent);\n        return red + (red * fraction) \u003c 255\n            \u0026\u0026 green + (green * fraction) \u003c 255\n            \u0026\u0026 blue + (blue * fraction) \u003c 255;\n    }\n \n    private static int darkenColor(int color, double fraction) {\n        return (int) Math.max(color - (color * fraction), 0);\n    }\n \n    private static int lightenColor(int color, double fraction) {\n        return (int) Math.min(color + (color * fraction), 255);\n}\n}\n\npublic void drawableclass() {"
  },
  {
    "متن": "دکمه تنظیم رنگ از لیست",
    "کد": "android.graphics.drawable.GradientDrawable bg \u003d new android.graphics.drawable.GradientDrawable();\n\nbg.setColor(new android.content.res.ColorStateList(new int[][] {{-android.R.attr.state_pressed}, {android.R.attr.state_pressed}},new int[] {Color.parseColor(\"#901020\"), Color.parseColor(\"#40109020\")}));\nbg.setShape(1);\nbg.setCornerRadius(10);\nbg.setStroke(2, new android.content.res.ColorStateList(new int[][] {{-android.R.attr.state_pressed}, {android.R.attr.state_pressed}}, new int[] {Color.parseColor(\"#505050\"), Color.parseColor(\"#502010\")}));\n\nbutton1.setBackground(bg);"
  },
  {
    "متن": "پیام مرکز",
    "کد": "Toast toast1 \u003d Toast.makeText(this, \"\".concat(_txt), Toast.LENGTH_SHORT);\n\ntoast1.setGravity(Gravity.CENTER,0,0);\n\ntoast1.show();"
  },
  {
    "متن": "تنظیم متن تسک",
    "کد": "String label \u003d (\"OnTask TitleBar\"); \n\nint color \u003d Color.rgb(90,70,220); \n\nandroid.content.res.Resources resources \u003d MainActivity.this.getResources(); \n\nBitmap icon \u003d BitmapFactory.decodeResource(resources, R.drawable.app_icon); \n\nMainActivity.this.setTaskDescription(new ActivityManager.TaskDescription(label, icon, color));"
  },
  {
    "متن": "اتمام پروگرس",
    "کد": "finishAffinity();\nint pid \u003d android.os.Process.myPid();\nandroid.os.Process.killProcess(pid); \nIntent intent \u003d new Intent(Intent.ACTION_MAIN);\nintent.addCategory(Intent.CATEGORY_HOME);\nstartActivity(intent);"
  },
  {
    "متن": "متن منو",
    "کد": "registerForContextMenu(listview1);\n}\n@Override\npublic void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) {\nsuper.onCreateContextMenu(menu, v, menuInfo); \nmenu.setHeaderTitle(\"Select the Action\"); \nmenu.add(0,v.getId(),0,\"Delete\");\nmenu.add(0,v.getId(),0,\"UpperCase\"); \nmenu.add(0,v.getId(),0,\"LowerCase\");\n}\n@Override\npublic boolean onContextItemSelected(MenuItem item) {\nif(item.getTitle()\u003d\u003d\"Delete\") {\nToast.makeText(this, \"Delete was pressed\", Toast.LENGTH_SHORT).show();\n} else if(item.getTitle()\u003d\u003d\"UpperCase\") {\nToast.makeText(this, \"UpperCase was pressed\", Toast.LENGTH_SHORT).show();\n} else if(item.getTitle()\u003d\u003d\"LowerCase\") {\nToast.makeText(this, \"LowerCase was pressed\", Toast.LENGTH_SHORT).show();\n}\nreturn true;"
  },
  {
    "متن": "سوئیچ سفارشی",
    "کد": "switch1.setTrackResource(R.drawable.img_res1);\n\nswitch1.setThumbResource(R.drawable.img_res2);"
  },
  {
    "متن": "دیتا پیکر",
    "کد": "DatePicker dp\u003dnew DatePicker (MainActivity.this);ln.addView(dp);Calendar calendar\u003dCalendar.getInstance(); dp.init(calendar.get(Calendar.YEAR), calendar.get(Calendar.MONTH), calendar.get(Calendar.DAY_OF_MONTH),new DatePicker.OnDateChangedListener(){@Override public void onDateChanged(DatePicker datePicker, int i, int i1, int i2) {Toast.makeText(getApplicationContext(),datePicker.getDayOfMonth() + \"-\" +datePicker.getMonth() + \"-\"+datePicker.getYear(),Toast.LENGTH_SHORT).show(); } });"
  },
  {
    "متن": "دکمه برگشت به خانه در اکشن بار",
    "کد": "getActionBar().setDisplayHomeAsUpEnabled(true);\n/* */} \n@Override \npublic boolean onMenuItemSelected(int featureId, MenuItem item) {\nint itemId \u003d item.getItemId(); \nswitch (itemId) {\ncase android.R.id.home:\nfinish();\nbreak;\n}\nreturn true;"
  },
  {
    "متن": "تنظیمات حرفه ای ایمیل",
    "کد": "//Code 1\n}\npublic boolean emailValidator(String email) \n{\n    java.util.regex.Pattern pattern;\n    java.util.regex.Matcher matcher;\n    final String EMAIL_PATTERN \u003d \"^[_A-Za-z0-9-]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$\";\n    pattern \u003d java.util.regex.Pattern.compile(EMAIL_PATTERN);\n    matcher \u003d pattern.matcher(email);\n    return matcher.matches();\n\n\n\n//Code 2\n//create a String variable email and set it to the email address\nif (emailValidator(email))\n{\n//code for successful validation\n}else{\n//code for error message\n}"
  },
  {
    "متن": "تنظیم سایه",
    "کد": "YourView.setElevation(number);"
  },
  {
    "متن": "گرادیانت برای فایل",
    "کد": "//Without Ripple Effect\n\nandroid.graphics.drawable.GradientDrawable gd \u003d new android.graphics.drawable.GradientDrawable();\ngd.setColor(Color.parseColor(_color));\ngd.setCornerRadius((float)_radius);\n_view.setBackground(gd);\n\n//with Ripple Effect\n\nandroid.graphics.drawable.GradientDrawable gd \u003d new android.graphics.drawable.GradientDrawable();\ngd.setColor(Color.parseColor(_color));\ngd.setCornerRadius((float)_radius);\n\nandroid.graphics.drawable.RippleDrawable ripdr1 \u003d new android.graphics.drawable.RippleDrawable(new android.content.res.ColorStateList(new int[][]{new int[]{}}, new int[]{Color.parseColor(_ripplecolor)}), null, gd);\n\n_view.setBackground(ripdr1);\n_view.setClickable(true);"
  },
  {
    "متن": "افکت کلیک",
    "کد": "//not rounded\n\n//transparent background\n\nandroid.graphics.drawable.GradientDrawable mask \u003d new android.graphics.drawable.GradientDrawable(); mask.setShape(android.graphics.drawable.GradientDrawable.RECTANGLE); mask.setColor(0xFF000000);\n\nandroid.graphics.drawable.RippleDrawable ripdr1 \u003d new android.graphics.drawable.RippleDrawable(new android.content.res.ColorStateList(new int[][]{new int[]{}}, new int[]{Color.parseColor(_rcolor)}), null, mask);\n\n_view.setBackground(ripdr1);\n_view.setClickable(true);\n\n\n//not transparent\n\nandroid.graphics.drawable.RippleDrawable ripdr1 \u003d new android.graphics.drawable.RippleDrawable(new android.content.res.ColorStateList(new int[][]{new int[]{}}, new int[]{Color.parseColor(_rcolor)}), null, new android.graphics.drawable.ColorDrawable(Color.parseColor(\"#yourhexcolor\")));\n\n_view.setBackground(ripdr1);\n_view.setClickable(true);\n\n//rounded\n\n//default one\n\nint[] attrs \u003d new int[]{android.R.attr.selectableItemBackgroundBorderless};\nandroid.content.res.TypedArray typedArray \u003d this.obtainStyledAttributes(attrs);\nint backgroundResource \u003d typedArray.getResourceId(0, 0);\t_v.setBackgroundResource(backgroundResource);\n_v.setClickable(true);\n\n//custom one\n\nandroid.graphics.drawable.RippleDrawable backgroundResource \u003d new android.graphics.drawable.RippleDrawable(new android.content.res.ColorStateList(new int[][]{new int[]{}}, new int[]{Color.parseColor(_ripplecolor)}), null, null);\t_v.setBackground(backgroundResource);\n_v.setClickable(true);"
  },
  {
    "متن": "تنظیمات اسکرول",
    "کد": "//remove scroll bar\n\nlistorscroll.setVerticalScrollBarEnabled(false);\n\n//remove borders animation\n\nlistorscroll.setOverScrollMode(View.OVER_SCROLL_NEVER);"
  },
  {
    "متن": "تنظیمات صفحه",
    "کد": "//oncreate\noverridePendingTransition(android.R.anim.fade_in, android.R.anim.fade_out);"
  },
  {
    "متن": "گرد کردن دیالوگ",
    "کد": "//replace show block with this\n\nDialog dlg \u003d yourDialog.create();\nandroid.graphics.drawable.GradientDrawable gd \u003d new android.graphics.drawable.GradientDrawable();\ngd.setColor(Color.parseColor(\"#ffffff\"));\ngd.setCornerRadius((float)20);\ndlg.getWindow().setBackgroundDrawable(gd);\ndlg.show();"
  },
  {
    "متن": "مربوط به استاتوس بار",
    "کد": "getWindow().setFlags( WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS, WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS );"
  },
  {
    "متن": "اسلاید دراور",
    "کد": "//on create\n\nActionBarDrawerToggle _toggle \u003d new ActionBarDrawerToggle(ac, _drawer, _toolbar, R.string.apptitle, R.string.apptitle) {\npublic void onDrawerClosed(View view) {\n//your event\n}\n@Override\npublic void onDrawerSlide(View drawerView, float offset) {\n//your event\n}\n};\n_drawer.addDrawerListener(_toggle);"
  },
  {
    "متن": "پس زمینه تولبار",
    "کد": "//on create\n\n((View)_toolbar.getParent()).setBackgroundColor(Color.parseColor(hexcolor));\n\ngetSupportActionBar().setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(Color.parseColor(hexcolor)));"
  },
  {
    "متن": "تنظیم ایکون و رنگ تولبار",
    "کد": "//on create\n\nif (_toolbar !\u003d null) {\nfor(int i\u003d 0; i \u003c _toolbar.getChildCount(); i++){\nView v \u003d _toolbar.getChildAt(i);\nif (v !\u003d null) {\nif(v instanceof TextView){\nTextView t \u003d (TextView) v;\nt.setBackgroundColor(Color.TRANSPARENT);\nt.setTextColor(Color.parseColor(hexcolor));\n//resize font to normal\nt.setTypeface(null, 0);\n} else if(v instanceof ImageView){\nImageView img \u003d (ImageView) v;\nimg.setColorFilter(Color.parseColor(hexcolor), PorterDuff.Mode.SRC_ATOP);\n}\n}\n}\n}"
  },
  {
    "متن": "رنگ پس زمینه فب",
    "کد": "/*on normal state*/\n\n_fab.setBackgroundTintList(android.content.res.ColorStateList.valueOf(Color.parseColor(hexcolor)));\n\n/*on pressed state*/\n\n_fab.setRippleColor(Color.parseColor(hexcolor));"
  },
  {
    "متن": "فیلتر رنگ",
    "کد": "imgviewordrawable.setColorFilter(Color.parseColor(hexcolor), PorterDuff.Mode.SRC_ATOP);"
  },
  {
    "متن": "دریافت گروهی صفحات",
    "کد": "//without statusbar and toolbar\n\nfindViewById(android.R.id.content)\n\n//with statusbar and toolbar(all the activity frame)\n\n((View)getWindow().getDecorView().getRootView())"
  },
  {
    "متن": "اسکرول در لاینر",
    "کد": "vscroll1.setOnScrollChangeListener(new ScrollView.OnScrollChangeListener() {\n@Override\npublic void onScrollChange(View v, int scrollX, int scrollY, int oldScrollX, int oldScrollY) {\n//your event\n}\n});"
  },
  {
    "متن": "ضربه در لاینر",
    "کد": "yourview.setOnTouchListener(new OnTouchListener() {\n@Override\npublic boolean onTouch(View v, MotionEvent event) {\nif (event.getAction() \u003d\u003d MotionEvent.ACTION_DOWN) {\n//when finger down\n//event.getX()\n//event.getY()\nreturn true;\n} else if (event.getAction() \u003d\u003d MotionEvent.ACTION_UP) {\n//when finger up\n//event.getX()\n//event.getY()\nreturn true;\n} else if (event.getAction() \u003d\u003d MotionEvent.ACTION_MOVE) {\n//when finger move\n//event.getX()\n//event.getY()\nreturn true;\n}\nreturn false;\n}\n});"
  },
  {
    "متن": "کلیک در لاینر",
    "کد": "yourview.setOnClickListener(new View.OnClickListener() {\n@Override\npublic void onClick(View v) {\n//your event\n}\n});"
  },
  {
    "متن": "رنگ ایکون استاتوس بار",
    "کد": "//on create\n\n//status bar color\n\nif (Build.VERSION.SDK_INT \u003e Build.VERSION_CODES.KITKAT) {\nWindow w \u003dthis.getWindow();\nw.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);\nw.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS); w.setStatusBarColor(Color.parseColor(hexcolor));\n}\n\n//status bar icons color\n\n//black\n\ngetWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR);\n\n//white (default)\n\ngetWindow().getDecorView().setSystemUiVisibility(0);"
  },
  {
    "متن": "اولوشن انیماتور",
    "کد": "ValueAnimator colorAnimation \u003d ValueAnimator.ofObject(new ArgbEvaluator(), (int)from, (int)to); colorAnimation.setDuration((int)_dur);\ncolorAnimation.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n@Override\npublic void onAnimationUpdate(ValueAnimator animator) {\n_v.setElevation((int)animator.getAnimatedValue());\n}\n});\ncolorAnimation.start();"
  },
  {
    "متن": "تنظیم رنگ پس زمینه انیمیشنی",
    "کد": "ValueAnimator colorAnimation \u003d ValueAnimator.ofObject(new ArgbEvaluator(), Color.parseColor(hexcolor1), Color.parseColor(hexcolor2)); colorAnimation.setDuration((int)_dur);\ncolorAnimation.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n@Override\npublic void onAnimationUpdate(ValueAnimator animator) {\n_v.setBackgroundColor((int)animator.getAnimatedValue());\n}\n});\ncolorAnimation.start();"
  },
  {
    "متن": "حذف دستور ها از استرینگ",
    "کد": "yourstr \u003d yourstr.replaceAll(\"://\", \":¥€\").replaceAll(\"(?:/\\\\*(?:[^*]|(?:\\\\*+[^*/]))*\\\\*+/)|(?://.*)\",\"\").replaceAll(\":¥€\", \"://\");"
  },
  {
    "متن": "خطای وب ویو",
    "کد": "//on page finished on bottom\n//always on bottom\n\nsuper.onPageFinished(_param1, _param2);\n}\n@Override\npublic void onReceivedError(WebView view, int errorCode, String description, String failingUrl) {\nsuper.onReceivedError(view, errorCode, description, failingUrl);\n//your event\n}\n});\n\nWebViewClient dep \u003d (new WebViewClient() {\n@Override\npublic void onPageFinished(WebView _param1, String _param2) {"
  },
  {
    "متن": "تنظیمات IME",
    "کد": "get string from shared pref (from any activity) :\n\ngetSharedPreferences(\"rootkey\", 0).getString(\"key\", \"null\")\n\nget boolean from shared pref (from any activity) :\n\ngetSharedPreferences(\"rootkey\", 0).getBoolean(\"key\", false)\n\nget int from shared pref (from any activity) :\n\ngetSharedPreferences(\"rootkey\", 0).getInt(\"key\", 0)\n\nput string on shared pref (from any activity) :\ngetSharedPreferences(rootkey, 0).edit().putString(key, value).commit();\n\nput boolean on shared pref (from any activity) :\ngetSharedPreferences(rootkey, 0).edit().putBoolean(key, value).commit();\n\nput int on shared pref (from any activity) :\ngetSharedPreferences(rootkey, 0).edit().putInt(key, value).commit();"
  },
  {
    "متن": "تنظیمات دراور",
    "کد": "LinearLayout _nav_view \u003d (LinearLayout) findViewById(R.id._nav_view);\n\nandroidx.drawerlayout.widget.DrawerLayout.LayoutParams params \u003d (androidx.drawerlayout.widget.DrawerLayout.LayoutParams)_nav_view.getLayoutParams();\n\nparams.width \u003d (int)getDip((int)_num);\n\nparams.height \u003d androidx.drawerlayout.widget.DrawerLayout.LayoutParams.MATCH_PARENT;\n\n_nav_view.setLayoutParams(params);"
  },
  {
    "متن": "تنظیمات لاتی",
    "کد": "final com.airbnb.lottie.LottieDrawable lottieDrawable \u003d new com.airbnb.lottie.LottieDrawable();\n\ncom.airbnb.lottie.LottieResult\u003ccom.airbnb.lottie.LottieComposition\u003e result \u003d com.airbnb.lottie.LottieCompositionFactory.fromAssetSync(this, \"youranimation.json\");\nlottieDrawable.setComposition(result.getValue());\nlottieDrawable.setRepeatCount(com.airbnb.lottie.LottieDrawable.INFINITE);\n\nlottieDrawable.loop(true); lottieDrawable.playAnimation();\n\n//with background color\nandroid.graphics.drawable.ColorDrawable back \u003d new android.graphics.drawable.ColorDrawable(Color.parseColor(hexcolor));\n//without background color\nandroid.graphics.drawable.ColorDrawable back \u003d new android.graphics.drawable.ColorDrawable(Color.TRANSPARENT);\n\n\nandroid.graphics.drawable.LayerDrawable finalDrawable \u003d new android.graphics.drawable.LayerDrawable(new android.graphics.drawable.Drawable[] {back, lottieDrawable}); \n\nyourview.setBackground(finalDrawable);\n//or\nimgview.setImageDrawable(finalDrawable);"
  }
]
